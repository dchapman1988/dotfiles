" THE NEXT 3 LINES MUST BE FIRST
execute pathogen#infect()
syntax on
filetype plugin indent on

" ADD YOUR LINES BELOW HERE

" Enable true color support in iTerm2
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

" Set terminal type for iTerm2
set term=xterm-256color

" Set encoding
set encoding=utf-8

" Whitespace stuff
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Status bar
set laststatus=2

" Enable syntastic syntax checking
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=1

" gist-vim defaults - simplified for macOS
let g:gist_clip_command = 'pbcopy'

" Make tab navigation nicer
map <C-J> :tabn<CR>
map <C-K> :tabp<CR>

" Make opening files in a new tab nicer
map <C-O> :tabnew 

" Show trailing whitespace and spaces before a tab:
:highlight ExtraWhitespace ctermbg=red guibg=red
:autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/

" Turn off menu in gui (for MacVim)
set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L

" Mouse settings - enable mouse support in iTerm2
set mouse=a

" Solarized8 theme configuration
syntax enable
set background=dark
let g:solarized_termtrans = 1
let g:solarized_use16 = 0  " Use full 256 colors
colorscheme solarized8

" Highlight the current line
set cursorline

" Set cursorline highlighting colors (works better with true color)
if has('gui_running') || exists('+termguicolors')
  :highlight CursorLine guibg=#2d2d2d
  :highlight CursorColumn guibg=#2d2d2d
else
  :highlight CursorLine ctermbg=236
  :highlight CursorColumn ctermbg=236
endif

" Highlight the current column
set cursorcolumn

" Show line numbers
set number
set ruler

" Better backspace behavior
set backspace=indent,eol,start

" iTerm2 specific cursor shape changes
if exists('$ITERM_SESSION_ID')
  " Insert mode - thin vertical line
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  " Replace mode - horizontal line
  let &t_SR = "\<Esc>]50;CursorShape=2\x7"  
  " Normal mode - block
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Enable clipboard integration with system clipboard
if has('unnamedplus')
  set clipboard=unnamedplus
else
  set clipboard=unnamed
endif

" Include user's local vim config
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif

set completefunc=syntaxcomplete#Complete

" Additional macOS/iTerm2 optimizations
set ttyfast
set lazyredraw

